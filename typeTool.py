# from typing import Text
from pynput.keyboard import Controller, Key
import time


print("""
#################################################################################
#
# 这是一个模拟输入的小程序，当前为内测版本。大致使用说明如下：
# 1.在命令窗口使用该工具
# 2.根据提示粘贴文本或进行其他操作
# 2.1 如果您要输入文本,请阅读下方 #输入文本#
# 2.2 如果文本粘贴错误,请在*确认输入*前输入'R'来重新粘贴文本
# 2.3 您可以在*确认输入*前输入'E'来退出操作
# 2.4 您可以在*粘贴文本*前直接回车来退出操作
#
# 输入文本
# [建议您先在输入窗口(你要输入的地方)选择好输入法]
# 1.将文本粘贴到命令窗口[一般Ctrl+V或者右击]
# 2.(粘贴后)回车两次,第一次换行[此时输入光标在空白行],第二次确认输入
# 2.(粘贴后)回车一次输入'Y'[代表yes],再一次回车确定输入
# [如果你粘贴的文本以换行符结尾,回车一次即可]
# 3.将你的焦点移动到输入框[一般鼠标点击输入框,出现输入光标]
# [在输入过程请勿操作键盘和改变焦点]
# 4.等待输入完成
#
# 常见问题:
# Q.为什么最后输入杂乱的中文？
# A.可能是因为您想要输入英文或其他语言时使用了*中文输入法*的*拼音输入*等。
# 程序原理时模仿敲击键盘输入,在中文输入下会输入同样字母对应的中文
# Q.文本粘贴错误了该怎么办？
# A.如果文本已经输入,你可以删除输入的文本再次使用本程序;如果您是在*确认输入*
# 前粘贴错了文本，可以输入'R'[ReTry]来重新输入。
# Q.为什么同一个目的会有两种实现方式,比如:*确认输入*?
# A.这是内测过程中积累的规则,为了使程序更加人性化而提供的多种方案。
# 由于开发者较为忙碌,暂时不计划进一步优化程序。
# Q.运行时出现乱码。
# A.大多数Windows命令窗默认支持GBK,可能不支持您的语言。如果需要,请您修改默认字符类型
# 如果粘贴结果出现乱码,请检查您输入法和输入在本程序的文本是否存在问题。
#
# 作者:林楷  V Beta.0.2  项目将会开源,可在GitHub上搜索
# 大多问题可以重启解决 程序设计问题欢迎反馈
#################################################################################
""")


def getText():
    tList = []
    print("请在此粘贴您的文本,输入Y结束输入,输入R重新,输入E退出|直接使用Enter可退出,输入后使用两次Enter开始")
    while True:
        text = input()
        if text == 'Y':
            break
        if text == '':
            if len(tList) == 0:
                return False
            else:
                break
        tList.append(text)
        if text == 'R':
            tList = []
        if text == 'E':
            return False
    return tList


KeyCon = Controller()
while True:
    tList = getText()
    if not tList:
        break
    print("---------请将光标放到您的输入框中并选择合适的输入法,我们将在5秒后开始输入---------")
    time.sleep(5)
    for t in tList:
        print("输入中...", t[0:int(len(t)/10)], "...")
        # Text(t)
        KeyCon.type(t)
        KeyCon.press(Key.enter)
    KeyCon.press(Key.backspace)
